// Generated by CoffeeScript 1.3.3
(function() {

  App.TableEditableExample = Ember.Namespace.create();

  App.TableEditableExample.EditableTableCell = Ember.Table.TableCell.extend({
    classNames: 'editable-table-cell',
    templateName: 'editable-table-cell',
    isEditing: false,
    type: 'text',
    innerTextField: Ember.TextField.extend({
      valueBinding: 'parentView.cellContent',
      didInsertElement: function() {
        return this.$().focus();
      },
      blur: function() {
        return this.set('parentView.isEditing', false);
      }
    }),
    onRowContentDidChange: Ember.observer(function() {
      return this.set('isEditing', false);
    }, 'rowContent'),
    editLabel: function(event) {
      this.set('isEditing', true);
      return event.stopPropagation();
    }
  });

  App.TableEditableExample.TableController = Ember.Table.TableController.extend({
    hasHeader: true,
    hasFooter: true,
    numFixedColumns: 0,
    numRows: 100000,
    rowHeight: 30,
    columns: Ember.computed(function() {
      return [0, 1, 2, 3, 4].map(function(number) {
        return Ember.Table.ColumnDefinition.create({
          headerCellName: 'Bar',
          tableCellViewClass: 'App.TableEditableExample.EditableTableCell',
          getCellContent: function(row) {
            return row["value" + number].toFixed(2);
          },
          setCellContent: function(row, value) {
            return row["value" + number] = +value;
          }
        });
      });
    }).property(),
    content: Ember.computed(function() {
      var _i, _ref, _results;
      return (function() {
        _results = [];
        for (var _i = 0, _ref = this.get('numRows'); 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
        return _results;
      }).apply(this).map(function(num, index) {
        return {
          key: index,
          value0: Math.random() * 80 + 10,
          value1: Math.random() * 80 + 10,
          value2: Math.random() * 80 + 10,
          value3: Math.random() * 80 + 10,
          value4: Math.random() * 80 + 10
        };
      });
    }).property('numRows')
  });

}).call(this);
